"""
Enhanced referral system implementation.
"""

from aiogram import Router, F
from aiogram.types import Message, CallbackQuery, InlineKeyboardButton
from aiogram.filters import Command
from aiogram.utils.keyboard import InlineKeyboardBuilder

from services.db import get_referrals, get_total_referral_rewards, add_referral, activate_referral, add_to_balance
from config import REFERRAL_REWARD_USD
from .keyboards import get_back_to_menu_keyboard
from logger import handlers_logger as logger

# Correct bot username
BOT_USERNAME = "cz_astrobot_bot"  # –ü—Ä–∞–≤–∏–ª—å–Ω–æ–µ –∏–º—è –±–æ—Ç–∞

router = Router()

# Function to handle referral registration
def register_referral(user_id, ref_user_id):
    """
    Registers a new referral relationship.
    
    Args:
        user_id (int): ID of the new user
        ref_user_id (int): ID of the referrer
    """
    # Don't allow self-referrals
    if user_id == ref_user_id:
        logger.warning(f"–ü–æ–ø—ã—Ç–∫–∞ —Å–∞–º–æ—Ä–µ—Ñ–µ—Ä–∞–ª—å—Å—Ç–≤–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {user_id}")
        return False
    
    # Add referral to database
    logger.info(f"–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å–≤—è–∑–∏: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –ø—Ä–∏—à–µ–ª –æ—Ç —Ä–µ—Ñ–µ—Ä–µ—Ä–∞ {ref_user_id}")
    add_referral(user_id, ref_user_id)
    return True

# Function to reward referrer when referral completes a target action
def reward_referrer(referrer_id, referred_id):
    """
    Rewards a referrer for bringing in a new user.
    
    Args:
        referrer_id (int): ID of the referrer
        referred_id (int): ID of the referred user
    """
    # Add reward to referrer's balance
    logger.info(f"–ù–∞—á–∏—Å–ª–µ–Ω–∏–µ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–≥–æ –≤–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏—è ({REFERRAL_REWARD_USD} –±–∞–ª–ª–æ–≤) –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {referrer_id} –∑–∞ –ø—Ä–∏–≤–ª–µ—á–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {referred_id}")
    add_to_balance(
        referrer_id,
        REFERRAL_REWARD_USD,
        f"–†–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–µ –≤–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏–µ –∑–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {referred_id}",
        "USD",
        REFERRAL_REWARD_USD
    )

# Enhanced function to show referral program details
async def show_referral_program_enhanced(message: Message):
    """
    Shows information about the referral program with enhanced details.
    """
    user_id = message.from_user.id
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –∑–∞–ø—Ä–æ—Å–∏–ª –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π –ø—Ä–æ–≥—Ä–∞–º–º–µ")
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º username –±–æ—Ç–∞
    ref_link = f"https://t.me/{BOT_USERNAME}?start={user_id}"
    
    # Get referral statistics
    referrals = get_referrals(user_id)
    total_rewards = get_total_referral_rewards(user_id)
    active_referrals = sum(1 for ref in referrals if ref['status'] == 'active')
    pending_referrals = sum(1 for ref in referrals if ref['status'] == 'pending')
    
    logger.debug(f"–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤ –¥–ª—è {user_id}: –∞–∫—Ç–∏–≤–Ω—ã—Ö={active_referrals}, –æ–∂–∏–¥–∞—é—â–∏—Ö={pending_referrals}, –≤—Å–µ–≥–æ –∑–∞—Ä–∞–±–æ—Ç–∞–Ω–æ=${total_rewards:.2f}")
    
    await message.answer(
        f"üë• –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞\n\n"
        f"–ü—Ä–∏–≥–ª–∞—à–∞–π—Ç–µ –¥—Ä—É–∑–µ–π –∏ –ø–æ–ª—É—á–∞–π—Ç–µ –≤–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏–µ!\n\n"
        f"‚Ä¢ –í—ã –ø–æ–ª—É—á–∞–µ—Ç–µ ${REFERRAL_REWARD_USD:.2f} –∑–∞ –∫–∞–∂–¥–æ–≥–æ –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—Å—è –ø–æ –≤–∞—à–µ–π —Å—Å—ã–ª–∫–µ\n"
        f"‚Ä¢ –ù–µ—Ç –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π –Ω–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤\n"
        f"‚Ä¢ –í–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏–µ –∑–∞—á–∏—Å–ª—è–µ—Ç—Å—è –ø—Ä—è–º–æ –Ω–∞ –≤–∞—à –±–∞–ª–∞–Ω—Å\n\n"
        f"üìä –í–∞—à–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:\n"
        f"‚Ä¢ –ê–∫—Ç–∏–≤–Ω—ã—Ö —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤: {active_referrals}\n"
        f"‚Ä¢ –û–∂–∏–¥–∞—é—â–∏—Ö —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤: {pending_referrals}\n"
        f"‚Ä¢ –û–±—â–∏–π –∑–∞—Ä–∞–±–æ—Ç–æ–∫: ${total_rewards:.2f}\n\n"
        f"üîó –í–∞—à–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞:\n{ref_link}",
        reply_markup=get_referral_keyboard(ref_link)
    )

# Function to get referral keyboard
def get_referral_keyboard(ref_link: str):
    """
    Creates a keyboard for the referral program.
    
    Args:
        ref_link (str): Referral link to copy
    
    Returns:
        InlineKeyboardMarkup: Keyboard with referral options
    """
    builder = InlineKeyboardBuilder()
    builder.add(
        InlineKeyboardButton(text="üîó –°–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É", callback_data="copy_ref_link")
    )
    builder.row(
        InlineKeyboardButton(text="üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–π", callback_data="ref_stats")
    )
    builder.row(
        InlineKeyboardButton(text="üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back_to_main_menu")
    )
    return builder.as_markup()

# Enhanced callback query handler for referral statistics
async def show_ref_stats_enhanced(callback: CallbackQuery):
    """
    Shows detailed referral statistics.
    """
    await callback.answer()
    
    user_id = callback.from_user.id
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –∑–∞–ø—Ä–æ—Å–∏–ª —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Å–≤–æ–∏—Ö —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤")
    
    referrals = get_referrals(user_id)
    total_rewards = get_total_referral_rewards(user_id)
    
    if not referrals:
        logger.debug(f"–£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id} –Ω–µ—Ç —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤")
        await callback.message.answer(
            "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π –ø—Ä–æ–≥—Ä–∞–º–º—ã\n\n"
            "–í—ã –µ—â—ë –Ω–∏–∫–æ–≥–æ –Ω–µ –ø—Ä–∏–≥–ª–∞—Å–∏–ª–∏.\n"
            "–ü–æ–¥–µ–ª–∏—Ç–µ—Å—å —Å–≤–æ–µ–π —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–æ–π, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å!",
            reply_markup=get_back_to_menu_keyboard()
        )
        return
    
    # Prepare detailed statistics message
    msg = "üìä –ü–æ–¥—Ä–æ–±–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤\n\n"
    
    # Active referrals
    active_refs = [ref for ref in referrals if ref['status'] == 'active']
    if active_refs:
        msg += "‚úÖ –ê–∫—Ç–∏–≤–Ω—ã–µ —Ä–µ—Ñ–µ—Ä–∞–ª—ã:\n"
        for i, ref in enumerate(active_refs, 1):
            name = ref['full_name'] or f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å #{ref['user_id']}"
            date = ref['activated_at']
            reward = ref['reward_amount']
            msg += f"{i}. {name} - ${reward:.2f} (–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω {date})\n"
        msg += "\n"
    
    # Pending referrals
    pending_refs = [ref for ref in referrals if ref['status'] == 'pending']
    if pending_refs:
        msg += "‚è≥ –û–∂–∏–¥–∞—é—â–∏–µ —Ä–µ—Ñ–µ—Ä–∞–ª—ã:\n"
        for i, ref in enumerate(pending_refs, 1):
            name = ref['full_name'] or f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å #{ref['user_id']}"
            date = ref['created_at']
            msg += f"{i}. {name} (–ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è {date})\n"
        msg += "\n"
    
    msg += f"üí∞ –û–±—â–∏–π –∑–∞—Ä–∞–±–æ—Ç–æ–∫: ${total_rewards:.2f}"
    
    logger.debug(f"–û—Ç–ø—Ä–∞–≤–∫–∞ –¥–µ—Ç–∞–ª—å–Ω–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")
    await callback.message.answer(
        msg,
        reply_markup=get_back_to_menu_keyboard()
    )

# Register router handlers
@router.message(F.text == "üë• –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞")
async def handle_referral_menu(message: Message):
    """
    Handler for the "Referral Program" button.
    """
    await show_referral_program_enhanced(message)

@router.callback_query(F.data == "ref_stats")
async def handle_ref_stats(callback: CallbackQuery):
    """
    Handler for referral statistics button.
    """
    await show_ref_stats_enhanced(callback)

@router.callback_query(F.data == "copy_ref_link")
async def handle_copy_ref_link(callback: CallbackQuery):
    """
    Handler for copy referral link button.
    """
    user_id = callback.from_user.id
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} —Å–∫–æ–ø–∏—Ä–æ–≤–∞–ª —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É")
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º username –±–æ—Ç–∞
    ref_link = f"https://t.me/{BOT_USERNAME}?start={user_id}"
    
    await callback.answer("–°—Å—ã–ª–∫–∞ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∞!")
    await callback.message.answer(
        f"–í–∞—à–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞:\n{ref_link}\n\n"
        "–°—Å—ã–ª–∫–∞ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∞ –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞."
    )