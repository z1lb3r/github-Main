Telegram Бот Human Design
Telegram-бот для анализа Human Design на основе даты, времени и места рождения пользователя.
Описание проекта
Бот собирает информацию о пользователе (имя, дата и время рождения, место рождения), отправляет запрос к API Holos для получения данных Human Design и генерирует персонализированные рекомендации с использованием RAG (Retrieval-Augmented Generation).
Структура проекта
Copy|-- config.py                     # Конфигурационные настройки (токены, пути к файлам)
|-- main.py                       # Точка входа в приложение
|-- docx_data.py                  # Утилита для извлечения текста из DOCX-файлов
|-- prepare_key_embeddings.py     # Создание эмбеддингов для key1.docx и key2.docx
|-- summarize_gen_keys.py         # Создание сводок из PDF-файлов
|-- handlers/
|   |-- command_handlers.py       # Обработчики команд бота
|   |-- conversation.py           # Обработчик обычных сообщений
|   |-- human_design.py           # Обработчик для секции "Хьюман дизайн"
|   |-- keyboards.py              # Клавиатуры для бота
|   |-- onboarding.py             # Процесс заполнения анкеты пользователем
|   |-- section_choice.py         # Обработчик выбора разделов
|-- services/
|   |-- db.py                     # Сервис для работы с базой данных SQLite
|   |-- holos_api.py              # Взаимодействие с API Holos
|   |-- pdf_data.py               # Извлечение текста из PDF-файлов
|   |-- rag_utils.py              # Генерация ответов с использованием RAG
Функциональность
Основные возможности

Онбординг: сбор данных пользователя (имя, дата и время рождения, место рождения).
Human Design: анализ данных пользователя с использованием API Holos и генерация рекомендаций.
Диалоговый режим: возможность задать до 4 вопросов боту после анализа.
Подписка: управление доступом к платным функциям бота.

Команды бота

/start - Начало работы с ботом, регистрация и онбординг
/subscribe - Активация подписки
/unsubscribe - Деактивация подписки
/status - Проверка статуса подписки

Технологии

Python и aiogram для создания Telegram-бота
SQLite для хранения данных пользователей
OpenAI API для генерации ответов и создания эмбеддингов
FAISS для индексации и поиска по эмбеддингам
aiohttp для асинхронных HTTP-запросов
PyPDF2 для работы с PDF-файлами
python-docx для работы с DOCX-файлами

Подготовка данных
Проект включает скрипты для подготовки данных:

prepare_key_embeddings.py - создает эмбеддинги из DOCX-файлов для последующего поиска
summarize_gen_keys.py - создает сводки (саммари) из PDF-файлов для уменьшения размера текста

Установка и запуск

Клонировать репозиторий
Установить зависимости: pip install -r requirements.txt
Настроить конфигурацию в файле config.py
Подготовить данные с помощью скриптов prepare_key_embeddings.py и summarize_gen_keys.py
Запустить бота: python main.py

Требования

Python 3.8+
Все библиотеки из файла requirements.txt
Токен Telegram Bot API
Ключ OpenAI API
Ключ API Holos